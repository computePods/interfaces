# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2022-04-04T08:48:25+00:00

from __future__ import annotations

from enum import Enum
from typing import Dict, Optional

from pydantic import BaseModel


class EntityType1(Enum):
    logFile = 'logFile'
    projectFile = 'projectFile'
    directory = 'directory'
    file = 'file'
    task = 'task'


class EntityType(BaseModel):
    entityType: Optional[EntityType1] = None
    url: Optional[str] = None


class WorkspaceTree(BaseModel):
    entityType: Optional[EntityType] = None
    directories: Optional[Dict[str, WorkspaceTree]] = None
    files: Optional[Dict[str, EntityType]] = None


class WorkspaceTreeModel(BaseModel):
    entityType: Optional[EntityType] = None
    directories: Optional[Dict[str, WorkspaceTree]] = None
    files: Optional[Dict[str, EntityType]] = None


WorkspaceTree.update_forward_refs()
